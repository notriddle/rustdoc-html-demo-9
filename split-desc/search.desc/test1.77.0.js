RUSTDOC_SEARCH_DESC=RUSTDOC_SEARCH_DESC||new Map();RUSTDOC_SEARCH_DESC.set('test',"Support code for rustc’s built in unit-test and …\n\n\n\n\nWhether should console output be colored or not\nDoctests are created by the <code>librustdoc</code> manually, so it’s …\n\n\n\n\nIntegration-style tests are expected to be in the <code>tests</code> …\nJSON output\nJUnit output\n\n\n\n\nRun only ignored tests\nOptions for the test run defined by the caller (instead of …\nFormat of the test results output\n\n\nVerbose output\nWhether ignored test should be run or not\nWhether test is expected to panic or not\n\n\n\n\nQuiet output\n\n\n\n\n\n\nType of the test according to the rust book conventions.\nUnit-tests are expected to be in the <code>src</code> folder of the …\nTests for the sources that don’t follow the project …\n\n\n\nInvoked when unit tests terminate. Returns <code>Result::Err</code> if …\nBenchmarking module.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStop at first failing test. May run a few more tests due …\n\n\n\n\n\n\n\n\n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n\n\n\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n\n\n\n\n\n\n\n\n\n\n\n\nA simple console test runner. Runs provided tests …\n\n\n\n\n\n\n\n\n\n\nA variant optimized for invocation with a static test …\nA variant optimized for invocation with a static test …\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nManager of the benchmarking runs.\n\n\nAn identity function that <em><strong>hints</strong></em> to the compiler to be …\n\n\n\n\n\n\n\n\n\n\n\n\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n\nCallback for benchmark functions to run in their body.\n\n\n\n\n\n\n\n\n\n\n\nTrait that provides simple descriptive statistics on a …\nExtracted collection of all the summary statistics of a …\n\n\n\n\n\n\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInter-quartile range: the difference between the 25th …\n\nMaximum value of the samples.\n\nArithmetic mean (average) of the samples: sum divided by …\n\nMedian of the samples: value separating the lower half of …\n\nScaled median of the absolute deviations of each sample …\n\nMedian absolute deviation as a percent of the median. See …\n\nMinimum value of the samples.\n\nConstruct a new summary of a sample set.\nPercentile: the value below which <code>pct</code> percent of the …\nQuartiles of the sample: three values that divide the …\n\nStandard deviation: the square root of the sample variance.\n\nStandard deviation as a percent of the mean value. See …\n\nSum of the samples.\n\n\n\n\n\nVariance of the samples: bias-corrected mean of the …\n\nWinsorize a set of samples, replacing values above the …\n\n\nDoctests are created by the <code>librustdoc</code> manually, so it’s …\n\n\n\nRuns the test in the current process, and sends the result …\nIntegration-style tests are expected to be in the <code>tests</code> …\n\n\n\n\nRun only ignored tests\nOptions for the test run defined by the caller (instead of …\nWhether ignored test should be run or not\n\nWhether test is expected to panic or not\nSpawns a subprocess to run the test, and sends the result …\n\n\n\n\n\n\nThe measured execution time of a unit test.\n\n\n\n\nStructure with parameters for calculating test execution …\nType of the test according to the rust book conventions.\n\n\n\n\n\n\n\n\n\n\nUnit-tests are expected to be in the <code>src</code> folder of the …\nTests for the sources that don’t follow the project …\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDenotes if the test critical execution time limit excess …\n\nStop at first failing test. May run a few more tests due …\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n\n\n\n\n\n\nInsert a named <code>value</code> (+/- <code>noise</code>) metric into the map. The …\n\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParses command line arguments into test options. Returns …\n\n\n\n\n\n\n\n\n\n\n\n\nReturns None for ignored test or tests that are just run, …\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n".split("\n"));if(typeof exports!=='undefined')exports.RUSTDOC_SEARCH_DESC=RUSTDOC_SEARCH_DESC;if(typeof onRustdocDesc!=='undefined')onRustdocDesc('test');